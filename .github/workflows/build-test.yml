name: Build Test

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
    paths: 
      - 'terraform/**'
      - 'backend/api/**'
      - 'frontend/index.html'
      - 'frontend/js/visitcounter.js'

permissions:
  id-token: write
  contents: read

env:
  ARM_CLIENT_ID: ${{ secrets.TEST_AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.TEST_AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.TEST_AZURE_TENANT_ID }}
  TF_VAR_rg_location: ${{ secrets.TEST_RESOURCE_GROUP_LOCATION }}
  TF_VAR_cosmosdb_account_name: ${{ secrets.TEST_COSMO_DB_ACCOUNT_NAME }}
  TF_VAR_cosmosdb_sql_database_name: ${{ secrets.TEST_SQL_DB_NAME }}
  TF_VAR_cosmosdb_sql_container_name: ${{ secrets.TEST_SQL_CONTAINER_NAME }}
  TF_VAR_azure_function_name: ${{ secrets.TEST_AZURE_FUNCTION_NAME }}
  TF_VAR_static_website_storage_account: ${{ secrets.TEST_STATIC_WEBSITE_STORAGE_ACCOUNT_NAME }}
  TF_VAR_cdn_profile_name: ${{ secrets.TEST_CDN_PROFILE_NAME }}
  FUNCTION_URL: ${{ secrets.FUNCTION_URL }}
  ENDPOINT_HOSTNAME:  ${{ secrets.ENDPOINT_HOSTNAME }}

jobs:
  build-environment:
    runs-on: ubuntu-latest
    environment: TEST
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3.0.0
        with:
          terraform_version: 1.6.3
          terraform_wrapper: false

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Run Deployment Script and Save Output
        run: |
          chmod +x ./build.sh 
          ./build.sh 

      - name: Upload test.env
        uses: actions/upload-artifact@v3
        with:
          name: test_env
          path: test.env
  
      - name: Azure logout
        run: az logout
        if: always()

  run-tests:
    needs: build-environment
    uses: ./.github/workflows/run-tests.yml
    secrets:
      FUNCTION_URL: ${{ secrets.FUNCTION_URL }}
      ENDPOINT_HOSTNAME: ${{ secrets.ENDPOINT_HOSTNAME }}

  destroy-environment:
    needs: [build-environment, run-tests]
    runs-on: ubuntu-latest
    environment: TEST
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
  
      - name: Download test.env 
        uses: actions/download-artifact@v3
        with:
          name: test_env
          path: ./

      - name: Load Environment Variables from test.env 
        run: |
          cat ./test.env >> $GITHUB_ENV

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Destroy test environment
        run: |
          chmod +x ./destroy.sh 
          ./destroy.sh 

      - name: Azure logout
        run: az logout
        if: always()

